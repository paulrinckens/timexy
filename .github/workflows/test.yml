name: Test

on:
  push:
    branches:
    - main
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      id: setup-python
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load cached Poetry installation
      uses: actions/cache@v2
      with:
        path: ~/.local  # the path depends on the OS
        key: poetry-0  # increment to reset cache
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      uses: actions/cache@v2
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install
    - name: Format checks
      run: |
        source $VENV
        make lint
    - name: Run tests
      run: |
        source $VENV
        make test
    - name: Upload code coverage
      uses: codecov/codecov-action@v2
    